<!--
    Copyright © 2016 - 2020 Stefan Berg <isbeorn86+NINA@googlemail.com>

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    N.I.N.A. is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    N.I.N.A. is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with N.I.N.A..  If not, see http://www.gnu.org/licenses/.-->
<UserControl
    x:Class="NINA.View.ImageControlView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:NINA.Utility.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:NINA.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ninactrl="clr-namespace:NINACustomControlLibrary;assembly=NINACustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Locale"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">

    <local:ImageView Image="{Binding Image}" Loaded="ImageView_Loaded">
        <local:ImageView.ButtonHeaderContent>
            <StackPanel Orientation="Horizontal">
                <!--<Button -zhang108
                    Width="35"
                    Margin="2.5"
                    Command="{Binding InspectAberrationCommand}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblAberrationInspector}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource AberrationInspectorSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>
                <ninactrl:CancellableButton
                    Grid.Column="0"
                    Width="35"
                    Margin="2.5"
                    ButtonImage="{StaticResource PlatesolveSVG}"
                    CancelButtonImage="{StaticResource CancelSVG}"
                    CancelCommand="{Binding CancelPlateSolveImageCommand}"
                    Command="{Binding PlateSolveImageCommand}"
                    ToolTip="{ns:Loc LblPlateSolveImage}" />

                <ToggleButton
                    Grid.Column="1"
                    Margin="2.5"
                    IsChecked="{Binding ShowCrossHair}">
                    <ToggleButton.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipCrossHair}" />
                        </ToolTip>
                    </ToggleButton.ToolTip>
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource CrosshairSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource CrosshairSVG}"
                                                Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>-->

                <!--<ToggleButton
                    Grid.Column="2"
                    Margin="2.5"
                    Command="{Binding PrepareImageCommand}"
                    IsChecked="{Binding AutoStretch}">
                    <ToggleButton.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipAutoStretch}" />
                        </ToolTip>
                    </ToggleButton.ToolTip>
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource WandSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource WandSVG}"
                                                Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>-->

                <!--<ToggleButton-zhang108
                    Grid.Column="3"
                    Margin="2.5"
                    Command="{Binding PrepareImageCommand}"
                    IsChecked="{Binding DetectStars}">
                    <ToggleButton.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipDetectStars}" />
                        </ToolTip>
                    </ToggleButton.ToolTip>
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource StarSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource StarSVG}"
                                                Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>-->

                <!--<ToggleButton
                    Grid.Column="4"
                    Margin="2.5"
                    IsChecked="{Binding ShowBahtinovAnalyzer}">
                    <ToggleButton.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipBahtinovAnalyzer}" />
                        </ToolTip>
                    </ToggleButton.ToolTip>
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource BahtinovSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource BahtinovSVG}"
                                                Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>-->

                <ToggleButton
                    Grid.Column="5"
                    Margin="2.5"
                    IsChecked="{Binding ShowSubSampler}"
                    Visibility="{Binding Source={StaticResource AppVM}, Path=CameraVM.CameraInfo.CanSubSample, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                    <ToggleButton.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblToolTipSubSample}" />
                        </ToolTip>
                    </ToggleButton.ToolTip>
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource SubSamplerSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource SubSamplerSVG}"
                                                Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                Stretch="Uniform" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </StackPanel>
        </local:ImageView.ButtonHeaderContent>
        <local:ImageView.ImageAreaContent>
            <StackPanel>
                <StackPanel.Resources>
                    <s:Int32 x:Key="zero">0</s:Int32>
                </StackPanel.Resources>
                <!--<Path
                    Width="{Binding Image.Width}"
                    Height="{Binding Image.Height}"
                    Data="                               M0.5,0 L0.5,0.4 M0.5,0.6 L0.5,1                                M0,0.5 L0.4,0.5 M0.6,0.5 L1,0.5                                                              M0.35,0.5 A 0.15,0.15 1 1 1 0.35,0.50001                               M0.4,0.5 A 0.1,0.1 1 1 1 0.4,0.50001                               M0.45,0.5 A 0.05,0.05 1 1 1 0.45,0.50001                               M0.48,0.5 A 0.02,0.02 1 1 1 0.48,0.50001                               M0.49,0.5 A 0.01,0.01 1 1 1 0.49,0.50001                               M0.495,0.5 A 0.005,0.005 1 1 1 0.495,0.50001                               "
                    Stretch="Uniform"
                    Stroke="{StaticResource ButtonBackgroundSelectedBrush}"
                    StrokeThickness="1"
                    Visibility="{Binding ShowCrossHair, Converter={StaticResource VisibilityConverter}}" />-->

                <!--<Grid Visibility="{Binding ShowBahtinovAnalyzer, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Rectangle
                        Width="{Binding BahtinovRectangle.Width}"
                        Height="{Binding BahtinovRectangle.Height}"
                        behaviors:DragCommandBehavior.Drag="True"
                        behaviors:DragCommandBehavior.DragMoveCommand="{Binding DragMoveCommand}"
                        behaviors:DragCommandBehavior.DragStartCommand="{Binding DragStartCommand}"
                        behaviors:DragCommandBehavior.DragStopCommand="{Binding DragStopCommand}"
                        behaviors:DragCommandBehavior.ResizeBoundary="{Binding DragResizeBoundary}"
                        RenderTransformOrigin="0.5,0.5"
                        Stroke="{StaticResource ButtonForegroundBrush}"
                        StrokeThickness="5">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{Binding BahtinovImage.Image}" />
                        </Rectangle.Fill>
                        <Rectangle.Margin>
                            <MultiBinding Converter="{StaticResource MultiMarginConverter}">
                                <Binding Path="BahtinovRectangle.X" />
                                <Binding Path="BahtinovRectangle.Y" />
                                <Binding Source="{StaticResource zero}" />
                                <Binding Source="{StaticResource zero}" />
                            </MultiBinding>
                        </Rectangle.Margin>
                    </Rectangle>

                    <Border
                        Grid.Column="1"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Opacity=".5" Color="{Binding Path=Color, Source={StaticResource SecondaryBrush}}" />
                        </Border.Background>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel VerticalAlignment="Top" Orientation="Vertical">
                                <UniformGrid VerticalAlignment="Center" Columns="2">
                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblWidth}" />
                                    <TextBox Margin="5,0,0,0" Text="{Binding BahtinovRectangle.Width}" />
                                </UniformGrid>
                                <UniformGrid VerticalAlignment="Center" Columns="2">
                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblHeight}" />
                                    <TextBox Margin="5,0,0,0" Text="{Binding BahtinovRectangle.Height}" />
                                </UniformGrid>
                            </StackPanel>
                            <StackPanel
                                Grid.Row="1"
                                VerticalAlignment="Bottom"
                                Orientation="Vertical">
                                <UniformGrid VerticalAlignment="Center" Columns="2">
                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblDistance}" />
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="5,0,0,0" Text="{Binding BahtinovImage.Distance, StringFormat=\{0:0.00\}}" />
                                        <TextBlock Margin="5,0,0,0" Text="{ns:Loc LblPx}" />
                                    </StackPanel>
                                </UniformGrid>
                            </StackPanel>
                        </Grid>
                        <Border.Margin>
                            <MultiBinding Converter="{StaticResource MultiMarginConverter}">
                                <Binding Source="{StaticResource zero}" />
                                <Binding Path="BahtinovRectangle.Y" />
                                <Binding Source="{StaticResource zero}" />
                                <Binding Source="{StaticResource zero}" />
                            </MultiBinding>
                        </Border.Margin>
                    </Border>
                </Grid>-->

                <Grid Visibility="{Binding ShowSubSampler, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Rectangle
                        Width="{Binding SubSampleRectangle.Width}"
                        Height="{Binding SubSampleRectangle.Height}"
                        behaviors:DragCommandBehavior.Drag="True"
                        behaviors:DragCommandBehavior.DragMoveCommand="{Binding SubSampleDragMoveCommand}"
                        behaviors:DragCommandBehavior.DragStartCommand="{Binding SubSampleDragStartCommand}"
                        behaviors:DragCommandBehavior.DragStopCommand="{Binding SubSampleDragStopCommand}"
                        behaviors:DragCommandBehavior.ResizeBoundary="{Binding DragResizeBoundary}"
                        RenderTransformOrigin="0.5,0.5"
                        Stroke="{StaticResource ButtonForegroundBrush}"
                        StrokeThickness="5">
                        <Rectangle.Fill>
                            <SolidColorBrush Opacity=".2" Color="Red" />
                        </Rectangle.Fill>
                        <Rectangle.Margin>
                            <MultiBinding Converter="{StaticResource MultiMarginConverter}">
                                <Binding Path="SubSampleRectangle.X" />
                                <Binding Path="SubSampleRectangle.Y" />
                                <Binding Source="{StaticResource zero}" />
                                <Binding Source="{StaticResource zero}" />
                            </MultiBinding>
                        </Rectangle.Margin>
                    </Rectangle>

                    <Border
                        Grid.Column="1"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Opacity=".5" Color="{Binding Path=Color, Source={StaticResource SecondaryBrush}}" />
                        </Border.Background>
                        <Grid>
                            <StackPanel VerticalAlignment="Top" Orientation="Vertical">
                                <UniformGrid VerticalAlignment="Center" Columns="2">
                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblWidth}" />
                                    <TextBox Margin="5,0,0,0" Text="{Binding SubSampleRectangle.Width}" />
                                </UniformGrid>
                                <UniformGrid VerticalAlignment="Center" Columns="2">
                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblHeight}" />
                                    <TextBox Margin="5,0,0,0" Text="{Binding SubSampleRectangle.Height}" />
                                </UniformGrid>
                            </StackPanel>
                        </Grid>
                        <Border.Margin>
                            <MultiBinding Converter="{StaticResource MultiMarginConverter}">
                                <Binding Source="{StaticResource zero}" />
                                <Binding Path="SubSampleRectangle.Y" />
                                <Binding Source="{StaticResource zero}" />
                                <Binding Source="{StaticResource zero}" />
                            </MultiBinding>
                        </Border.Margin>
                    </Border>
                </Grid>
            </StackPanel>
        </local:ImageView.ImageAreaContent>
    </local:ImageView>
</UserControl>