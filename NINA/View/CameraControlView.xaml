<!--
    Copyright © 2016 - 2020 Stefan Berg <isbeorn86+NINA@googlemail.com>

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    N.I.N.A. is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    N.I.N.A. is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with N.I.N.A..  If not, see http://www.gnu.org/licenses/.-->
<UserControl
    x:Class="NINA.View.CameraControlView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:filter="clr-namespace:NINA.Model.MyFilterWheel"
    xmlns:local="clr-namespace:NINA.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ninactrl="clr-namespace:NINACustomControlLibrary;assembly=NINACustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Locale"
    xmlns:util="clr-namespace:NINA.Utility"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">

    <StackPanel x:Name="LayoutRoot" Orientation="{Binding MyOrientation}">
        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>-->

        <StackPanel IsEnabled="{Binding MyCommand.Execution.IsNotCompleted, Converter={StaticResource InverseBooleanConverter}}" Orientation="{Binding MyOrientation}">
            <Border
                MinHeight="30"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0">
                <UniformGrid VerticalAlignment="Center" Columns="2">
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblExposureTime}" />
                    <TextBox MinWidth="50" Margin="5">
                        <TextBox.Text>
                            <Binding Mode="TwoWay" Path="MyExposureDuration">
                                <Binding.ValidationRules>
                                    <util:GreaterZeroRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </UniformGrid>
            </Border>
            <Border
                MinHeight="30"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0">
                <UniformGrid VerticalAlignment="Center" Columns="2">
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblFilter}" />
                    <ComboBox
                        Height="25"
                        Margin="5,0,0,0"
                        DisplayMemberPath="Name"
                        SelectedItem="{Binding MySelectedFilter, Converter={StaticResource FilterWheelFilterConverter}}"
                        SelectedValuePath="Name">
                        <ComboBox.Resources>
                            <CollectionViewSource x:Key="Filters" Source="{Binding MyFilters}" />
                        </ComboBox.Resources>
                        <ComboBox.ItemsSource>
                            <CompositeCollection>
                                <filter:NullFilter />
                                <CollectionContainer Collection="{Binding Source={StaticResource Filters}}" />
                            </CompositeCollection>
                        </ComboBox.ItemsSource>
                    </ComboBox>
                </UniformGrid>
            </Border>
            <Border
                MinHeight="30"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0"
                Visibility="{Binding MyBinningModes, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                <UniformGrid VerticalAlignment="Center" Columns="2">
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblBinning}" />
                    <ComboBox
                        Height="25"
                        Margin="5,0,0,0"
                        DisplayMemberPath="Name"
                        ItemsSource="{Binding MyBinningModes}"
                        SelectedItem="{Binding MySelectedBinningMode}"
                        SelectedValuePath="Name" />
                </UniformGrid>
            </Border>
            <Border
                MinHeight="30"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0"
                Visibility="{Binding MyCanGetGain, Converter={StaticResource VisibilityConverter}, FallbackValue=Collapsed}">
                <UniformGrid VerticalAlignment="Center" Columns="2">
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblGain}" />
                    <Grid Margin="5,0,0,0">

                        <ComboBox
                            ItemsSource="{Binding MyGains}"
                            SelectedItem="{Binding MySelectedGain}"
                            Visibility="{Binding MyGains, Converter={StaticResource CollectionContainsItemsToVisibilityConverter}}" />
                        <TextBox IsEnabled="{Binding MyCanSetGain}" Visibility="{Binding MyGains, Converter={StaticResource InverseCollectionContainsItemsToVisibilityConverter}}">
                            <TextBox.Resources>
                                <util:BindingProxy x:Key="proxy" Data="{Binding}" />
                            </TextBox.Resources>
                            <TextBox.Text>
                                <Binding
                                    Converter="{StaticResource MinusOneToEmptyStringConverter}"
                                    Path="MySelectedGain"
                                    UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <util:ShortRangeRule>
                                            <util:ShortRangeRule.ValidRange>
                                                <util:ShortRangeChecker Maximum="{Binding Source={StaticResource proxy}, Path=Data.MyMaxGain}" Minimum="{Binding Source={StaticResource proxy}, Path=Data.MyMinGain}" />
                                            </util:ShortRangeRule.ValidRange>
                                        </util:ShortRangeRule>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>
                </UniformGrid>
            </Border>
        </StackPanel>

        <StackPanel
            Margin="5,0,0,0"
            HorizontalAlignment="Right"
            Orientation="Horizontal"
            Visibility="{Binding MyCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">

            <ToggleButton
                Width="45"
                Height="45"
                IsChecked="{Binding MyLoop}">
                <ToggleButton.ToolTip>
                    <ToolTip ToolTipService.ShowOnDisabled="True">
                        <TextBlock Text="{ns:Loc LblTooltipLoop}" />
                    </ToolTip>
                </ToggleButton.ToolTip>
                <ToggleButton.Style>
                    <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Path
                                            Margin="5"
                                            Data="{StaticResource LoopSVG}"
                                            Fill="{StaticResource ButtonForegroundBrush}"
                                            Stretch="Uniform" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Path
                                            Margin="5"
                                            Data="{StaticResource LoopSVG}"
                                            Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                            Stretch="Uniform" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <ninactrl:CancellableButton
                Width="45"
                Height="45"
                Margin="5,0,5,0"
                HorizontalAlignment="Left"
                ButtonImage="{Binding MyButtonImage}"
                CancelButtonImage="{Binding MyCancelButtonImage}"
                CancelCommand="{Binding MyCancelCommand}"
                Command="{Binding MyCommand}"
                ToolTip="{ns:Loc LblTooltipTakeExposure}" />
        </StackPanel>
    </StackPanel>
</UserControl>