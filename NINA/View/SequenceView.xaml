<!--
    Copyright © 2016 - 2020 Stefan Berg <isbeorn86+NINA@googlemail.com>

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    N.I.N.A. is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    N.I.N.A. is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with N.I.N.A..  If not, see http://www.gnu.org/licenses/.-->
<UserControl
    x:Class="NINA.View.SequenceView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:filter="clr-namespace:NINA.Model.MyFilterWheel"
    xmlns:local="clr-namespace:NINA.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:NINA.Model"
    xmlns:ninactrl="clr-namespace:NINACustomControlLibrary;assembly=NINACustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Locale"
    xmlns:rules="clr-namespace:NINA.Utility.ValidationRules"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:util="clr-namespace:NINA.Utility"
    d:DesignHeight="500"
    d:DesignWidth="1000"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <Grid Margin="5,0,0,0" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBooleanConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ListView
                MaxHeight="65"
                Margin="-5,0,0,0"
                BorderBrush="Transparent"
                ItemsSource="{Binding Targets}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                SelectedItem="{Binding Sequence}">
                <ListView.Resources>
                    <Style x:Key="myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style>
                </ListView.Resources>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Grid Width="200" Height="30">
                                        <Polygon
                                            x:Name="PART_Polygon"
                                            Margin="-38,0,0,0"
                                            Fill="{StaticResource ButtonBackgroundBrush}"
                                            Points="0,0 10,0 12,5 10,10 0,10 2,5 0,0"
                                            Stretch="Fill" />
                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Path
                                                x:Name="PART_Finished"
                                                Width="25"
                                                Height="25"
                                                Data="{StaticResource CheckedCircledSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                            <ninactrl:LoadingControl
                                                x:Name="PART_Running"
                                                Width="25"
                                                Height="25" />
                                            <TextBlock
                                                Grid.Column="1"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{StaticResource ButtonForegroundBrush}"
                                                Text="{Binding TargetNameWithModifiedIndicator}" />
                                            <Button
                                                x:Name="PART_Close"
                                                Grid.Column="2"
                                                Width="25"
                                                Height="25"
                                                Margin="0,0,40,0"
                                                HorizontalAlignment="Right"
                                                Command="{Binding DataContext.RemoveTargetCommand, RelativeSource={RelativeSource AncestorType=local:SequenceView}}"
                                                CommandParameter="{Binding}">
                                                X
                                            </Button>
                                            <Button
                                                x:Name="PART_Reset"
                                                Grid.Column="3"
                                                Width="25"
                                                Height="25"
                                                Margin="0,0,70,0"
                                                HorizontalAlignment="Right"
                                                Command="{Binding DataContext.ResetTargetCommand, RelativeSource={RelativeSource AncestorType=local:SequenceView}}"
                                                CommandParameter="{Binding}">
                                                <Button.ToolTip>
                                                    <ToolTip ToolTipService.ShowOnDisabled="True">
                                                        <TextBlock Text="{ns:Loc LblTooltipResetTarget}" />
                                                    </ToolTip>
                                                </Button.ToolTip>
                                                <Grid>
                                                    <Path
                                                        Margin="5"
                                                        Data="{StaticResource LoopSVG}"
                                                        Fill="{StaticResource ButtonForegroundBrush}"
                                                        Stretch="Uniform" />
                                                </Grid>
                                            </Button>
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsFinished}" Value="False">
                                            <Setter TargetName="PART_Finished" Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsRunning}" Value="False">
                                            <Setter TargetName="PART_Running" Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="PART_Polygon" Property="Fill" Value="{StaticResource ButtonBackgroundSelectedBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter TargetName="PART_Close" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter TargetName="PART_Reset" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView ColumnHeaderContainerStyle="{StaticResource myHeaderStyle}" />
                </ListView.View>
            </ListView>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button
                    Grid.Column="1"
                    Width="35"
                    Command="{Binding PromoteTargetCommand}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipPromoteTarget}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource ArrowLeftSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>
                <Button
                    Grid.Column="2"
                    Width="35"
                    Command="{Binding DemoteTargetCommand}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipDemoteTarget}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource ArrowRightSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>
                <Button
                    Grid.Column="3"
                    Width="35"
                    Command="{Binding SaveTargetSetCommand}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipTargetSaveSet}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource SaveSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>
                <Button
                    Grid.Column="4"
                    Width="35"
                    Command="{Binding LoadTargetSetCommand}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipTargetLoadSet}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource LoadSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>
                <Button
                    Grid.Column="5"
                    Width="35"
                    Command="{Binding AddTargetCommand}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipAddTarget}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource AddSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>
            </StackPanel>
        </Grid>
        <UniformGrid
            Grid.Row="1"
            Columns="2"
            IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBooleanConverter}}">
            <GroupBox>
                <GroupBox.Header>
                    <UniformGrid Columns="2">
                        <Grid Height="40" Margin="5">
                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="20"
                                Text="{ns:Loc LblSequence}" />
                        </Grid>
                    </UniformGrid>
                </GroupBox.Header>

                <StackPanel DataContext="{Binding Sequence}">
                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                        <UniformGrid Columns="2">
                            <UniformGrid
                                Margin="0,6,0,6"
                                VerticalAlignment="Center"
                                Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblSequenceDelay}" />
                                <TextBox Margin="5,0,0,0">
                                    <TextBox.Text>
                                        <Binding Path="Delay" UpdateSourceTrigger="LostFocus">
                                            <Binding.ValidationRules>
                                                <rules:GreaterZeroRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </UniformGrid>
                        </UniformGrid>
                    </Border>

                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                        <UniformGrid Columns="2">
                            <UniformGrid
                                Margin="0,6,0,6"
                                VerticalAlignment="Center"
                                Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblSequenceMode}" />
                                <ComboBox
                                    Margin="5,0,0,0"
                                    ItemsSource="{Binding Source={util:EnumBindingSource {x:Type model:SequenceMode}}}"
                                    SelectedItem="{Binding Mode}" />
                            </UniformGrid>
                        </UniformGrid>
                    </Border>

                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                        <UniformGrid Columns="2">
                            <UniformGrid
                                Margin="0,6,0,6"
                                VerticalAlignment="Center"
                                Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblStartGuiding}" />
                                <CheckBox
                                    Width="120"
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Left"
                                    IsChecked="{Binding StartGuiding}" />
                            </UniformGrid>
                        </UniformGrid>
                    </Border>
                    <StackPanel Visibility="{Binding Coordinates, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                        <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                            <UniformGrid Columns="2">
                                <UniformGrid
                                    Margin="0,6,0,6"
                                    VerticalAlignment="Center"
                                    Columns="2">
                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblSlewToTarget}" />
                                    <CheckBox
                                        Width="120"
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Left"
                                        IsChecked="{Binding SlewToTarget}" />
                                </UniformGrid>
                                <UniformGrid
                                    Margin="5,6,0,6"
                                    VerticalAlignment="Center"
                                    Columns="2">
                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblCenterTarget}" />
                                    <CheckBox
                                        Width="120"
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Left"
                                        IsChecked="{Binding CenterTarget}" />
                                </UniformGrid>
                            </UniformGrid>
                        </Border>
                        <Border
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="0"
                            DataContext="{Binding Source={StaticResource AppVM}, Path=SeqVM}">
                            <StackPanel Orientation="Vertical">
                                <UniformGrid
                                    Margin="0,6,0,6"
                                    VerticalAlignment="Center"
                                    Columns="4">
                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblEstimatedDownloadTime}" />
                                    <TextBox
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Stretch"
                                        IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}"
                                        Text="{Binding EstimatedDownloadTime}" />
                                </UniformGrid>
                                <UniformGrid Columns="4">

                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblETA}" />
                                    <UniformGrid
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"
                                        Columns="2">
                                        <TextBlock
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Text="{ns:Loc LblFrom}" />
                                        <TextBox
                                            Margin="5,0,0,0"
                                            HorizontalAlignment="Stretch"
                                            IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}"
                                            Text="{Binding OverallStartTime, Mode=OneWay, StringFormat=HH:mm:ss}" />
                                    </UniformGrid>
                                    <UniformGrid
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"
                                        Columns="2">
                                        <TextBlock
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Text="{ns:Loc LblTo}" />

                                        <TextBox
                                            Margin="5,0,0,0"
                                            HorizontalAlignment="Stretch"
                                            IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}"
                                            Text="{Binding OverallEndTime, Mode=OneWay, StringFormat=HH:mm:ss}" />
                                    </UniformGrid>
                                    <UniformGrid
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"
                                        Columns="2">
                                        <TextBlock
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Text="{ns:Loc LblDuration}" />
                                        <TextBox
                                            Margin="5,0,0,0"
                                            HorizontalAlignment="Stretch"
                                            IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}"
                                            Text="{Binding OverallDuration, StringFormat=hh\\:mm\\:ss, Mode=OneWay}" />
                                    </UniformGrid>
                                </UniformGrid>
                            </StackPanel>
                        </Border>
                        <Border
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="0"
                            DataContext="{Binding Source={StaticResource AppVM}, Path=SeqVM}">
                            <UniformGrid
                                Margin="0,6,0,6"
                                VerticalAlignment="Center"
                                Columns="4">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblCurrentSequenceEstimates}" />
                                <UniformGrid
                                    Margin="0,0,0,0"
                                    VerticalAlignment="Center"
                                    Columns="2">
                                    <TextBlock
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Text="{ns:Loc LblFrom}" />
                                    <TextBox
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Stretch"
                                        IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}"
                                        Text="{Binding SequenceEstimatedStartTime, StringFormat=HH:mm:ss, Mode=OneWay}" />
                                </UniformGrid>
                                <UniformGrid
                                    Margin="0,0,0,0"
                                    VerticalAlignment="Center"
                                    Columns="2">
                                    <TextBlock
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Text="{ns:Loc LblTo}" />
                                    <TextBox
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Stretch"
                                        IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}"
                                        Text="{Binding SequenceEstimatedEndTime, StringFormat=HH:mm:ss, Mode=OneWay}" />
                                </UniformGrid>
                                <UniformGrid
                                    Margin="0,0,0,0"
                                    VerticalAlignment="Center"
                                    Columns="2">
                                    <TextBlock
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Text="{ns:Loc LblDuration}" />
                                    <TextBox
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Stretch"
                                        IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}"
                                        Text="{Binding SequenceEstimatedDuration, StringFormat=hh\\:mm\\:ss, Mode=OneWay}" />
                                </UniformGrid>
                            </UniformGrid>
                        </Border>
                        <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,1,0,1">
                            <Expander x:Name="PART_AutoFocusExpander">
                                <Expander.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{ns:Loc LblAutoFocus}" />
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                                <TextBlock Text="|" />
                                                <TextBlock Margin="5,0,0,0" Text="{ns:Loc LblAutoFocusOnStart}" />
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding AutoFocusOnStart}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                            </StackPanel>
                                            <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                                <TextBlock Text="|" />
                                                <TextBlock Margin="5,0,0,0" Text="{ns:Loc LblAutoFocusOnFilterChange}" />
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding AutoFocusOnFilterChange}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                            </StackPanel>

                                            <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                                <TextBlock Text="|" />
                                                <TextBlock Margin="5,0,0,0" Text="{Binding AutoFocusSetTime}" />
                                                <TextBlock Margin="5,0,0,0" Text="{ns:Loc LblMinutesShort}" />
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding AutoFocusAfterSetTime}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                            </StackPanel>
                                            <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                                <TextBlock Text="|" />
                                                <TextBlock Margin="5,0,0,0" Text="{Binding AutoFocusSetExposures}" />
                                                <TextBlock Margin="5,0,0,0" Text="{ns:Loc LblExposures}" />
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding AutoFocusAfterSetExposures}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                            </StackPanel>
                                            <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                                <TextBlock Text="|" />
                                                <TextBlock Margin="5,0,0,0" Text="{Binding AutoFocusAfterTemperatureChangeAmount}" />
                                                <TextBlock Text="{ns:Loc LblDegreeShort}" />
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding AutoFocusAfterTemperatureChange}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                            </StackPanel>
                                            <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                                <TextBlock Text="|" />
                                                <TextBlock Margin="5,0,0,0" Text="{Binding AutoFocusAfterHFRChangeAmount}" />
                                                <TextBlock Text="{ns:Loc LblPercentShort}" />
                                                <TextBlock Margin="5,0,0,0" Text="{ns:Loc LblHFR}" />
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding AutoFocusAfterHFRChange}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                            </StackPanel>
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=PART_AutoFocusExpander, Path=IsExpanded}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                        </StackPanel>
                                    </StackPanel>
                                </Expander.Header>

                                <StackPanel Orientation="Vertical">
                                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                                        <UniformGrid Columns="2">
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusOnStart}" />
                                                <CheckBox
                                                    Width="120"
                                                    Margin="5,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    IsChecked="{Binding AutoFocusOnStart}" />
                                            </UniformGrid>
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusOnFilterChange}" />
                                                <CheckBox
                                                    Width="120"
                                                    Margin="5,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    IsChecked="{Binding AutoFocusOnFilterChange}" />
                                            </UniformGrid>
                                        </UniformGrid>
                                    </Border>
                                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                                        <UniformGrid Columns="2">
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusAfterSetTime}" />
                                                <CheckBox
                                                    Width="120"
                                                    Margin="5,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    IsChecked="{Binding AutoFocusAfterSetTime}" />
                                            </UniformGrid>
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusSetTime}" />
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox
                                                        Width="120"
                                                        Margin="5,0,0,0"
                                                        HorizontalAlignment="Left">
                                                        <TextBox.Text>
                                                            <Binding Path="AutoFocusSetTime" UpdateSourceTrigger="LostFocus">
                                                                <Binding.ValidationRules>
                                                                    <rules:GreaterZeroRule />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBox.Text>
                                                    </TextBox>
                                                    <TextBlock
                                                        Width="120"
                                                        Margin="5,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Text="{ns:Loc LblMinutesShort}" />
                                                </StackPanel>
                                            </UniformGrid>
                                        </UniformGrid>
                                    </Border>
                                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                                        <UniformGrid Columns="2">
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusAfterSetExposures}" />
                                                <CheckBox
                                                    Width="120"
                                                    Margin="5,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    IsChecked="{Binding AutoFocusAfterSetExposures}" />
                                            </UniformGrid>
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusNrOfExposures}" />
                                                <TextBox
                                                    Width="120"
                                                    Margin="5,0,0,0"
                                                    HorizontalAlignment="Left">
                                                    <TextBox.Text>
                                                        <Binding Path="AutoFocusSetExposures" UpdateSourceTrigger="LostFocus">
                                                            <Binding.ValidationRules>
                                                                <rules:GreaterZeroRule />
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox.Text>
                                                </TextBox>
                                            </UniformGrid>
                                        </UniformGrid>
                                    </Border>
                                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,0">
                                        <UniformGrid Columns="2">
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusAfterTemperatureChange}" />
                                                <CheckBox
                                                    Width="120"
                                                    Margin="5,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    IsChecked="{Binding AutoFocusAfterTemperatureChange}" />
                                            </UniformGrid>
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusAfterTemperatureChangeAmount}" />
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox
                                                        Width="120"
                                                        Margin="5,0,0,0"
                                                        HorizontalAlignment="Left">
                                                        <TextBox.Text>
                                                            <Binding Path="AutoFocusAfterTemperatureChangeAmount" UpdateSourceTrigger="LostFocus">
                                                                <Binding.ValidationRules>
                                                                    <rules:GreaterZeroRule />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBox.Text>
                                                    </TextBox>
                                                    <TextBlock
                                                        Width="75"
                                                        Margin="5,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Text="{ns:Loc LblDegreeShort}" />
                                                </StackPanel>
                                            </UniformGrid>
                                        </UniformGrid>
                                    </Border>
                                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,0">
                                        <UniformGrid Columns="2">
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusAfterHFRChange}" />
                                                <CheckBox
                                                    Width="120"
                                                    Margin="5,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    IsChecked="{Binding AutoFocusAfterHFRChange}" />
                                            </UniformGrid>
                                            <UniformGrid
                                                Margin="0,6,0,6"
                                                VerticalAlignment="Center"
                                                Columns="2">
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAutoFocusAfterHFRChangeAmount}" />
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox
                                                        Width="75"
                                                        Margin="5,0,0,0"
                                                        HorizontalAlignment="Left">
                                                        <TextBox.Text>
                                                            <Binding Path="AutoFocusAfterHFRChangeAmount" UpdateSourceTrigger="LostFocus">
                                                                <Binding.ValidationRules>
                                                                    <rules:GreaterZeroRule />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBox.Text>
                                                    </TextBox>
                                                    <TextBlock
                                                        Width="75"
                                                        Margin="5,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Text="{ns:Loc LblPercentShort}" />
                                                </StackPanel>
                                            </UniformGrid>
                                        </UniformGrid>
                                    </Border>
                                </StackPanel>
                            </Expander>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <GroupBox DataContext="{Binding Sequence}" Visibility="{Binding DSO, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                <GroupBox.Header>
                    <UniformGrid Columns="2">
                        <Grid Height="40" Margin="5">
                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="20"
                                Text="{ns:Loc LblTarget}" />
                        </Grid>
                        <Button
                            Width="25"
                            Height="25"
                            Margin="5,0,5,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            Command="{Binding DataContext.CoordsFromPlanetariumCommand, RelativeSource={RelativeSource AncestorType=local:SequenceView}}">
                            <Button.ToolTip>
                                <ToolTip ToolTipService.ShowOnDisabled="False">
                                    <TextBlock Text="{ns:Loc LblPlanetariumTooltip}" />
                                </ToolTip>
                            </Button.ToolTip>
                            <Path
                                Margin="5"
                                Data="{StaticResource GetCoordsSVG}"
                                Fill="{StaticResource ButtonForegroundBrush}"
                                Stretch="Uniform" />
                        </Button>
                    </UniformGrid>
                </GroupBox.Header>

                <Grid Visibility="{Binding Coordinates, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="25" />
                        <RowDefinition Height="Auto" MinHeight="25" />
                        <RowDefinition Height="Auto" MinHeight="25" />
                        <RowDefinition Height="Auto" MinHeight="25" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblTargetName}" />
                    <ninactrl:AutoCompleteBox
                        Grid.Column="1"
                        Margin="5,0,0,0"
                        Foreground="{StaticResource PrimaryBrush}"
                        HintText="{ns:Loc LblObjectNameHint}"
                        PopupBackground="{StaticResource TertiaryBackgroundBrush}"
                        SearchResult="{Binding Source={StaticResource AppVM}, Path=SeqVM.DeepSkyObjectSearchVM.TargetSearchResult.Result}"
                        SelectedSearchResult="{Binding Source={StaticResource AppVM}, Path=SeqVM.DeepSkyObjectSearchVM.SelectedTargetSearchResult, Mode=TwoWay}"
                        ShowPopup="{Binding Source={StaticResource AppVM}, Path=SeqVM.DeepSkyObjectSearchVM.ShowPopup, Mode=TwoWay}"
                        Text="{Binding TargetName, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock
                        Grid.Row="1"
                        VerticalAlignment="Center"
                        Text="{ns:Loc LblRA}" />
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <TextBox
                            MinWidth="40"
                            Margin="5,0,0,0"
                            TextAlignment="Right">
                            <TextBox.Text>
                                <Binding Path="RAHours" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <rules:HoursRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock VerticalAlignment="Center">h</TextBlock>
                        <TextBox
                            MinWidth="40"
                            Margin="5,0,0,0"
                            TextAlignment="Right">
                            <TextBox.Text>
                                <Binding Path="RAMinutes" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <rules:MinutesRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock VerticalAlignment="Center">m</TextBlock>
                        <TextBox
                            MinWidth="40"
                            Margin="5,0,0,0"
                            TextAlignment="Right">
                            <TextBox.Text>
                                <Binding Path="RASeconds" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <rules:SecondsRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock VerticalAlignment="Center">s</TextBlock>
                    </StackPanel>

                    <TextBlock
                        Grid.Row="2"
                        VerticalAlignment="Center"
                        Text="{ns:Loc LblDec}" />
                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <TextBox
                            MinWidth="40"
                            Margin="5,0,0,0"
                            TextAlignment="Right">
                            <TextBox.Text>
                                <MultiBinding Converter="{StaticResource DecDegreeConverter}" UpdateSourceTrigger="LostFocus">
                                    <Binding Path="NegativeDec" />
                                    <Binding Path="DecDegrees">
                                        <Binding.ValidationRules>
                                            <rules:DegreesRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </MultiBinding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock VerticalAlignment="Center">d</TextBlock>
                        <TextBox
                            MinWidth="40"
                            Margin="5,0,0,0"
                            TextAlignment="Right">
                            <TextBox.Text>
                                <Binding Path="DecMinutes" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <rules:MinutesRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock VerticalAlignment="Center">m</TextBlock>
                        <TextBox
                            MinWidth="40"
                            Margin="5,0,0,0"
                            TextAlignment="Right">
                            <TextBox.Text>
                                <Binding Path="DecSeconds" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <rules:SecondsRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock VerticalAlignment="Center">s</TextBlock>
                    </StackPanel>

                    <TextBlock
                        Grid.Row="3"
                        VerticalAlignment="Center"
                        Text="{ns:Loc LblRotation}" />
                    <TextBox
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="5,0,0,0"
                        Text="{Binding Rotation}" />

                    <Grid
                        Grid.Row="4"
                        Grid.ColumnSpan="2"
                        Margin="0,0,0,0"
                        Visibility="{Binding AltitudeVisible, Converter={StaticResource VisibilityConverter}}">
                        <!--<local:AltitudeChart-zhang103
                            Grid.Row="2"
                            Margin="0,0,0,-20"
                            DataContext="{Binding DSO}" />-->
                    </Grid>
                </Grid>
            </GroupBox>
        </UniformGrid>

        <DataGrid
            Grid.Row="2"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            HeadersVisibility="Column"
            HorizontalScrollBarVisibility="Disabled"
            IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBooleanConverter}}"
            ItemsSource="{Binding Sequence.Items}"
            SelectedIndex="{Binding SelectedSequenceRowIdx}"
            SelectionMode="Single">
            <DataGrid.CellStyle>
                <Style BasedOn="{StaticResource MyDataGridCell}" TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="IsEditing" Value="True" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="IsEditing" Value="True" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblEnabled}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblProgress}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                TextAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} / {1}">
                                        <Binding Path="ProgressExposureCount" />
                                        <Binding Path="TotalExposureCount" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblTotalNo}">
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ninactrl:IntStepperControl
                                Margin="5,0,5,0"
                                HorizontalAlignment="Stretch"
                                AddSVG="{StaticResource AddSVG}"
                                MinValue="0"
                                StepSize="1"
                                SubstractSVG="{StaticResource SubstractSVG}"
                                Value="{Binding TotalExposureCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                Text="{Binding TotalExposureCount}"
                                TextAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblTime}">
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ninactrl:StepperControl
                                Margin="5,0,5,0"
                                HorizontalAlignment="Stretch"
                                AddSVG="{StaticResource AddSVG}"
                                MinValue="0"
                                StepSize="1"
                                SubstractSVG="{StaticResource SubstractSVG}"
                                Value="{Binding ExposureTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                Text="{Binding ExposureTime}"
                                TextAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblType}">
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source={StaticResource AppVM}, Path=SeqVM.ImageTypes}" SelectedItem="{Binding ImageType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                Text="{Binding ImageType}"
                                TextAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblFilter}">
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox
                                DisplayMemberPath="Name"
                                SelectedItem="{Binding FilterType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FilterWheelFilterConverter}}"
                                SelectedValuePath="Name"
                                Visibility="{Binding Converter={StaticResource IsLightImageTypeToVisibilityConverter}}">
                                <ComboBox.Resources>
                                    <CollectionViewSource x:Key="Filters" Source="{Binding Source={StaticResource AppVM}, Path=ActiveProfile.FilterWheelSettings.FilterWheelFilters}" />
                                </ComboBox.Resources>
                                <ComboBox.ItemsSource>
                                    <CompositeCollection>
                                        <filter:NullFilter />
                                        <CollectionContainer Collection="{Binding Source={StaticResource Filters}}" />
                                    </CompositeCollection>
                                </ComboBox.ItemsSource>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                Text="{Binding FilterType}"
                                TextAlignment="Center"
                                Visibility="{Binding Converter={StaticResource IsLightImageTypeToVisibilityConverter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblBinning}">
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox
                                DisplayMemberPath="Name"
                                ItemsSource="{Binding Source={StaticResource AppVM}, Path=CameraVM.Cam.BinningModes}"
                                SelectedItem="{Binding Binning, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectedValuePath="Name" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                Text="{Binding Binning}"
                                TextAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblDither}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox
                                HorizontalAlignment="Center"
                                IsChecked="{Binding Dither, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding Source={StaticResource AppVM}, Path=SeqVM.IsUsingSynchronizedGuider, Converter={StaticResource InverseBooleanConverter}}"
                                Visibility="{Binding Converter={StaticResource IsLightImageTypeToVisibilityConverter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblDitherEveryNoFrame}">
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ninactrl:IntStepperControl
                                Margin="5,0,5,0"
                                HorizontalAlignment="Stretch"
                                AddSVG="{StaticResource AddSVG}"
                                IsEnabled="{Binding Source={StaticResource AppVM}, Path=SeqVM.IsUsingSynchronizedGuider, Converter={StaticResource InverseBooleanConverter}}"
                                MinValue="0"
                                StepSize="1"
                                SubstractSVG="{StaticResource SubstractSVG}"
                                Visibility="{Binding Converter={StaticResource IsLightImageTypeToVisibilityConverter}}"
                                Value="{Binding DitherAmount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                IsEnabled="{Binding Source={StaticResource AppVM}, Path=SeqVM.IsUsingSynchronizedGuider, Converter={StaticResource InverseBooleanConverter}}"
                                Text="{Binding DitherAmount}"
                                TextAlignment="Center"
                                Visibility="{Binding Converter={StaticResource IsLightImageTypeToVisibilityConverter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--  List of ISOs  -->
                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblGain}">
                    <DataGridTemplateColumn.Visibility>
                        <PriorityBinding>
                            <Binding
                                Converter="{StaticResource CollectionContainsItemsToVisibilityConverter}"
                                Path="CameraVM.Cam.Gains"
                                Source="{StaticResource AppVM}" />
                            <Binding
                                Converter="{StaticResource NullToVisibilityConverter}"
                                Path="CameraVM.Cam"
                                Source="{StaticResource AppVM}" />
                        </PriorityBinding>
                    </DataGridTemplateColumn.Visibility>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox SelectedItem="{Binding Gain, Mode=TwoWay, Converter={StaticResource MinusOneToEmptyStringConverter}, UpdateSourceTrigger=LostFocus}">
                                <ComboBox.ItemsSource>
                                    <CompositeCollection>
                                        <s:Int32>-1</s:Int32>
                                        <CollectionContainer Collection="{Binding Source={StaticResource AppVM}, Path=CameraVM.Cam.Gains}" />
                                    </CompositeCollection>
                                </ComboBox.ItemsSource>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                Text="{Binding Gain, Converter={StaticResource MinusOneToEmptyStringConverter}}"
                                TextAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--  Free Gain Setting  -->
                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblGain}">
                    <DataGridTemplateColumn.Visibility>
                        <PriorityBinding>
                            <Binding
                                Converter="{StaticResource InverseCollectionContainsItemsToVisibilityConverter}"
                                Path="CameraVM.Cam.Gains"
                                Source="{StaticResource AppVM}" />
                            <Binding
                                Converter="{StaticResource NullToVisibilityConverter}"
                                Path="CameraVM.Cam"
                                Source="{StaticResource AppVM}" />
                        </PriorityBinding>
                    </DataGridTemplateColumn.Visibility>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox>
                                <TextBox.Text>
                                    <Binding
                                        Converter="{StaticResource MinusOneToEmptyStringConverter}"
                                        Path="Gain"
                                        UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:IntRangeRule>
                                                <rules:IntRangeRule.ValidRange>
                                                    <rules:IntRangeChecker Maximum="{Binding Source={StaticResource AppVM}, Path=CameraVM.Cam.GainMax}" Minimum="{Binding Source={StaticResource AppVM}, Path=CameraVM.Cam.GainMin}" />
                                                </rules:IntRangeRule.ValidRange>
                                            </rules:IntRangeRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                Text="{Binding Gain, Converter={StaticResource MinusOneToEmptyStringConverter}}"
                                TextAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--  Free Offset Setting  -->
                <DataGridTemplateColumn
                    Width="*"
                    CanUserSort="False"
                    Header="{ns:Loc LblOffset}">
                    <DataGridTemplateColumn.Visibility>
                        <PriorityBinding>
                            <Binding
                                Converter="{StaticResource BooleanToVisibilityHiddenConverter}"
                                Path="CameraVM.Cam.CanSetOffset"
                                Source="{StaticResource AppVM}" />
                            <Binding
                                Converter="{StaticResource NullToVisibilityConverter}"
                                Path="CameraVM.Cam"
                                Source="{StaticResource AppVM}" />
                        </PriorityBinding>
                    </DataGridTemplateColumn.Visibility>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox>
                                <TextBox.Text>
                                    <Binding
                                        Converter="{StaticResource MinusOneToEmptyStringConverter}"
                                        Path="Offset"
                                        UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <util:ShortRangeRule>
                                                <util:ShortRangeRule.ValidRange>
                                                    <util:ShortRangeChecker Maximum="{Binding Source={StaticResource AppVM}, Path=CameraVM.Cam.OffsetMax}" Minimum="{Binding Source={StaticResource AppVM}, Path=CameraVM.Cam.OffsetMin}" />
                                                </util:ShortRangeRule.ValidRange>
                                            </util:ShortRangeRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                Text="{Binding Offset, Converter={StaticResource MinusOneToEmptyStringConverter}}"
                                TextAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <DockPanel Grid.Row="3" Margin="5">
            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                <Button
                    Width="40"
                    Command="{Binding AddSequenceRowCommand}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipAddSequence}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource AddSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>
                <Button
                    Width="40"
                    Margin="1,0,0,0"
                    Command="{Binding RemoveSequenceRowCommand}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipRemoveSequence}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource SubstractSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>

                <Button
                    Width="40"
                    Margin="1,0,0,0"
                    Command="{Binding ResetSequenceRowCommand}"
                    CommandParameter="{Binding}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipResetSequence}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="4"
                        Data="{StaticResource LoopSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>

                <Button
                    Width="40"
                    Margin="1,0,0,0"
                    Command="{Binding PromoteSequenceRowCommand}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipPromoteSequenceRow}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource ArrowUpSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>

                <Button
                    Width="40"
                    Margin="1,0,0,0"
                    Command="{Binding DemoteSequenceRowCommand}"
                    IsEnabled="{Binding Sequence.IsRunning, Converter={StaticResource InverseBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblTooltipDemoteSequenceRow}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource ArrowDownSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>

                <Button
                    Width="40"
                    Margin="1,0,0,0"
                    Command="{Binding SaveSequenceCommand}"
                    IsEnabled="{Binding SequenceSaveable}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblSaveSequenceToolTip}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource SaveSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>

                <Button
                    Width="40"
                    Margin="1,0,0,0"
                    Command="{Binding SaveAsSequenceCommand}"
                    IsEnabled="{Binding Sequence, Converter={StaticResource InverseNullToBooleanConverter}}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblSaveAsSequenceToolTip}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource SaveAsSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>

                <Button
                    Width="40"
                    Margin="1,0,0,0"
                    Command="{Binding LoadSequenceCommand}">
                    <Button.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblLoadSequenceToolTip}" />
                        </ToolTip>
                    </Button.ToolTip>
                    <Path
                        Margin="5"
                        Data="{StaticResource LoadSVG}"
                        Fill="{StaticResource ButtonForegroundBrush}"
                        Stretch="Uniform" />
                </Button>
            </StackPanel>
            <Grid
                MinWidth="300"
                HorizontalAlignment="Right"
                DockPanel.Dock="Right"
                IsEnabled="{Binding Source={StaticResource AppVM}, Path=CameraVM.CameraInfo.Connected, FallbackValue=False}">
                <Grid IsEnabled="{Binding Source={StaticResource AppVM}, Path=AnchorableSnapshotVM.IsLooping, Converter={StaticResource InverseBooleanConverter}}">
                    <ninactrl:AsyncProcessButton
                        ButtonForegroundBrush="{StaticResource ButtonForegroundBrush}"
                        ButtonImage="{StaticResource PlaySVG}"
                        CancelButtonImage="{StaticResource CancelSVG}"
                        CancelCommand="{Binding CancelSequenceCommand}"
                        Command="{Binding StartSequenceCommand}"
                        IsEnabled="{Binding Source={StaticResource AppVM}, Path=CameraVM.Cam.LiveViewEnabled, FallbackValue=False, Converter={StaticResource InverseBooleanConverter}}"
                        IsPaused="{Binding IsPaused}"
                        LoadingImageBrush="{StaticResource PrimaryBrush}"
                        PauseButtonImage="{StaticResource PauseSVG}"
                        PauseCommand="{Binding PauseSequenceCommand}"
                        ResumeButtonImage="{StaticResource PlaySVG}"
                        ResumeCommand="{Binding ResumeSequenceCommand}"
                        ToolTip="{ns:Loc LblTooltipStartSequence}" />
                </Grid>
            </Grid>
        </DockPanel>
    </Grid>
</UserControl>